@model Service.Models.PagedList<MonoProject.Models.MakeViewModel>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<form asp-action="Index" asp-controller="MakesController" method="POST" page="1">
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Abrv", "Index", new { sortOrder = ViewBag.NameSortParmAbrv, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
    <br />
    <ul class="pagination">
        @for (int i = 1; i <= Model.MetaData.TotalPages; i++)
        {
        <li class="page-item">
            @if (i != Model.MetaData.CurrentPage)
            {
                @Html.ActionLink(i.ToString(), "Index", new { page = i })

            }
            else
            {
                <a class="page-link">@i</a>
            }
        </li>
        }
    </ul>
    <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
</form>